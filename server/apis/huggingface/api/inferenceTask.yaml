openapi: 3.1.0
info: 
  title: Huggingface Inference Task
  version: 1.0
paths: 

  audio-classification:
    post: 
      operationId: audio-classification
      title: Huggingface Audio Classification
      requestBody: 
        required: true
        content: 
          application/json: 
            schema: 
              type: object
              properties: 
                
                model: 
                  type: string
                  description: model

                use_cache:
                  type: boolean
                  description: Whether to use the cache or not
                  default: true
                
                wait_for_model:
                  type: boolean
                  description: Whether to wait for the model to be loaded or not
                  default: false
                
                audio: 
                  type: object
                  x-type: audioArray
                  customSocket: audio
                  socketOpts:
                    array: true
                  title: Audio
                  description: Audio Input to the model
      responses: 
        '200': 
          description: Successful operation
          content: 
            application/json: 
              schema: 
                type: object
                properties: 
                  label: 
                    type: string
                    title: Label
                    description: The label for the class (model specific)
                    customSocket: text
                    socketOpts:
                      array: true
                  score: 
                    type: number
                    title: Score
                    description: A float that represents how likely it is that the audio file belongs to this class.  
                    socketOpts:
                      array: true
                  json:
                    type: object
                    title: JSON
                    description: A combined JSON output from the model in the form {label, score}
                    socketOpts:
                      array: true

  audio-to-audio: 
    post: 
      operationId: audio-to-audio
      title: Huggingface Audio to Audio
      requestBody: 
        required: true
        content: 
          application/json: 
            schema: 
              type: object
              properties: 
                
                model: 
                  type: string
                  description: model

                use_cache:
                  type: boolean
                  description: Whether to use the cache or not
                  default: true
                
                wait_for_model:
                  type: boolean
                  description: Whether to wait for the model to be loaded or not
                  default: false

                audio: 
                  type: object
                  x-type: audioArray
                  title: Audio
                  description: Audio Input to the model
                  socketOpts:
                    array: true       
      responses: 
        '200': 
          description: Successful operation
          content: 
            application/json: 
              schema: 
                type: object
                properties: 
                  audios: 
                    type: object
                    x-type: audioArray
                    title: Audio
                    description: Output of the model
                    socketOpts:
                      array: true
                  labels: 
                    type: string
                    title: Label
                    description: The labels for the class (model specific) of the segments.
                    socketOpts:
                      array: true
 
  automatic-speech-recognition:
    post: 
      operationId: automatic-speech-recognition
      title: Huggingface Automatic Speech Recognition
      requestBody: 
        required: true
        content: 
          application/json: 
            schema: 
              type: object
              properties: 
                
                model: 
                  type: string
                  description: model

                use_cache:
                  type: boolean
                  description: Whether to use the cache or not
                  default: true
                
                wait_for_model:
                  type: boolean
                  description: Whether to wait for the model to be loaded or not
                  default: false

                audio: 
                  type: object
                  x-type: audioArray
                  title: Audio
                  description: Audio Input to the model
                  socketOpts:
                    array: true     
      responses: 
        '200': 
          description: Successful operation
          content: 
            application/json: 
              schema: 
                type: object
                properties: 
                  text: 
                    type: string
                    title: Text
                    description: The text transcription of the audio
                    customSocket: text
                    socketOpts:
                      array: true

  conversational: 
    post: 
      operationId: conversational
      title: Conversational
      requestBody: 
        required: true
        content: 
          application/json: 
            schema: 
              type: object
              properties: 
                
                model:
                  type: string
                  description: The model to use for the conversion
                  required: true

                use_cache:
                  type: boolean
                  description: Whether to use the cache or not
                  default: true
                
                wait_for_model:
                  type: boolean
                  description: Whether to wait for the model to be loaded or not
                  default: false

                text:
                  type: string
                  description: The text to be converted to audio
                  required: true

                generated_responses:
                  type: string
                  desciption: A list of strings corresponding to the earlier replies from the user. Should be of the same length of generated_responses.
                  customSocket: text
                  socketOpts:
                    array: true

                past_user_inputs:
                  type: string
                  desciption: The last input from the user in the conversation.
                  customSocket: text
                  socketOpts:
                    array: true

                max_length:
                  type: number
                  description: Integer to define the maximum length in tokens of the output summary.
                  required: false

                max_time:
                  type: number
                  description: Float (0-120.0). The amount of time in seconds that the query should take maximum. Network can cause some overhead so it will be a soft limit.
                  required: false
                  minimum: 0
                  maximum: 120
                  step: 0.1

                min_length:
                  type: number
                  description: Float (0.0-100.0). The more a token is used within generation the more it is penalized to not be picked in successive generation passes.
                  required: false
                  minimum: 0
                  maximum: 100
                  step: 0.1

                repetition_penalty:
                  type: number
                  description: Float (0.0-100.0). The more a token is used within generation the more it is penalized to not be picked in successive generation passes.
                  required: false
                  minimum: 0
                  maximum: 100
                  step: 0.1

                temperature:
                  type: number
                  description: Float (0.0-100.0). The more a token is used within generation the more it is penalized to not be picked in successive generation passes.
                  required: false
                  minimum: 0
                  maximum: 100
                  step: 0.1

                top_k:
                  type: number
                  description: Integer (0-100). The number of highest probability vocabulary tokens to keep for top-k-filtering.
                  required: false
                  minimum: 0
                  maximum: 100
                  step: 1  
                  
                top_p:
                  type: number
                  description: Float (0.0-1.0). If set to float < 1, only the most probable tokens with probabilities that add up to top_p or higher are kept for generation.
                  required: false
                  minimum: 0
                  maximum: 1
                  step: 0.1                
      responses: 
        '200': 
          description: Successful operation
          content: 
            application/json: 
              schema: 
                type: object
                properties: 

                  generated_responses:
                    type: string
                    description: The generated responses from the model.
                    customSocket: text
                    socketOpts:
                      array: true

                  past_user_inputs:
                    type: string
                    description: The past user inputs from the model.
                    customSocket: text
                    socketOpts:
                      array: true

                  generated_text:
                    type: string
                    description: The generated text from the model.
                    customSocket: text

                  warnings:
                    type: string
                    description: Any warnings from the model.
                    customSocket: text
                    socketOpts:
                      array: true

  document-question-answering:
    post:
      operationId: document-question-answering
      title: Document Question Answering
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                model:
                  type: string
                  description: The model to use for the task
                  required: true

                use_cache:
                  type: boolean
                  description: Whether to use the cache or not
                  default: true
                
                wait_for_model:
                  type: boolean
                  description: Whether to wait for the model to be loaded or not
                  default: false

                image:
                  type: object
                  x-type: imageArray
                  title: Image
                  description: The document image to ask the question about
                  customSocket: image
                  socketOpts:
                    array: true

                question:
                  type: string
                  description: The question to ask about the document image
                  required: true

                json:
                  type: object
                  title: JSON
                  description: A combined JSON output from the model in the form {answer, score, start, end}
                  socketOpts:
                    array: true                  
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  answer:
                    type: string
                    description: The answer to the question within the document
                    customSocket: text
                    socketOpts:
                      array: true                  
                  json:
                    type: object
                    title: JSON
                    description: A combined JSON output from the model in the form {answer, score, start, end}
                    socketOpts:
                      array: true                   

  feature-extraction:
    post:
      operationId: feature-extraction
      title: Feature Extraction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:

                model:
                  type: string
                  description: The model to use for the task
                  required: true

                use_cache:
                  type: boolean
                  description: Whether to use the cache or not
                  default: true
                
                wait_for_model:
                  type: boolean
                  description: Whether to wait for the model to be loaded or not
                  default: false

                inputs:
                  type: string
                  customSocket: text
                  socketOpts:
                    array: true
                  description: A string or a list of strings to get the features from
                  required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  features:
                    type: array
                    items:
                      type: number
                    description: The extracted features
                  json:
                    type: object
                    title: JSON
                    description: A JSON containing the extracted features in the format {features}

  fill-mask:
    post: 
      operationId: fill-mask
      title: Fill Mask
      requestBody: 
        required: true
        content: 
          application/json: 
            schema: 
              type: object
              properties: 

                model: 
                  type: string
                  description: model

                use_cache:
                  type: boolean
                  description: Whether to use the cache or not
                  default: true
                
                wait_for_model:
                  type: boolean
                  description: Whether to wait for the model to be loaded or not
                  default: false

                inputs: 
                  type: string
                  description: A string with a masked token to be filled
                  default: "Hello I'm a [MASK] model."
      
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  token_str:
                    type: string
                    description: The sequence with the mask filled in
                    customSocket: text
                    socketOpts:
                      array: true
                  json:
                    type: object
                    title: JSON
                    description: A JSON containing the filled in mask in the format {sequence, score, token}
                    socketOpts:
                      array: true

  image-classification:
    post: 
      operationId: image-classification
      title: Huggingface Image Classification
      requestBody: 
        required: true
        content: 
          application/json: 
            schema: 
              type: object
              properties: 

                model: 
                  type: string
                  description: model

                use_cache:
                  type: boolean
                  description: Whether to use the cache or not
                  default: true
                
                wait_for_model:
                  type: boolean
                  description: Whether to wait for the model to be loaded or not
                  default: false

                image: 
                  type: object
                  x-type: imageArray
                  title: Image
                  description: Input images to the model
                  customSocket: image
                  socketOpts:
                    array: true   
      responses: 
        '200': 
          description: Successful operation
          content: 
            application/json: 
              schema: 
                type: object
                properties: 

                  label: 
                    type: string
                    title: Labels
                    description: The labels for the class (model specific) of the segments.
                    socketOpts:
                      array: true

                  json:
                    type: object
                    title: JSON
                    description: A combined JSON output from the model in the form {label, score}
                    socketOpts:
                      array: true

  image-segmentation:
    post: 
      operationId: image-segmentation
      title: Huggingface Image Segmentation
      requestBody: 
        required: true
        content: 
          application/json: 
            schema: 
              type: object
              properties: 

                model: 
                  type: string
                  description: model

                use_cache:
                  type: boolean
                  description: Whether to use the cache or not
                  default: true
                
                wait_for_model:
                  type: boolean
                  description: Whether to wait for the model to be loaded or not
                  default: false

                image: 
                  type: object
                  x-type: imageArray
                  title: Image
                  description: Input images to the model
                  customSocket: image
                  socketOpts:
                    array: true      
      responses: 
        '200': 
          description: Successful operation
          content: 
            application/json: 
              schema: 
                type: object
                properties: 

                  masks:
                    type: array
                    x-type: imageB64Array
                    customSocket: imageB64Array
                    title: Masks
                    description: Single channel black-and-white images representing the mask of the segments.
                    socketOpts:
                      array: true

                  json:
                    type: object
                    title: JSON
                    description: A combined JSON output from the model in the form {mask, label, score}
                    socketOpts:
                      array: true

  image-to-image:
    post: 
      operationId: image-to-image
      title: Huggingface Image to Image Transformation 
      requestBody: 
        required: true
        content: 
           application/json:
            schema: 
              type: object
              properties: 

                model: 
                  type: string
                  description: model

                use_cache:
                  type: boolean
                  description: Whether to use the cache or not
                  default: true
                
                wait_for_model:
                  type: boolean
                  description: Whether to wait for the model to be loaded or not
                  default: false

                inputs: 
                  type: object
                  x-type: imageArray
                  title: Images
                  description: Input images to the model
                  customSocket: image
                  
                prompt:
                  type: string
                  description: The text prompt to guide the image generation.

                strength:
                  type: number
                  description: Conceptually, indicates how much to transform the reference image. Must be between 0 and 1.
                
                negative_prompt:
                  type: string
                  description: An optional negative prompt for the image generation

                height:
                  type: number
                  description: The height in pixels of the generated image
                  default: 512
                  
                width:
                  type: number
                  description: The width in pixels of the generated image
                  default: 512

                num_inference_steps:
                  type: number
                  description: The number of denoising steps. More steps usually lead to higher quality images but slower inference.
                  default: 20

                guidance_scale:
                  type: number
                  description: Higher guidance scale encourages to generate images closely linked to the text prompt, usually at the expense of lower image quality. 3.5 to 7.5 are typical

                guess_mode:
                  type: boolean
                  description: Works for ControlNet models, enables the encoder to recognize the content of the input image even without prompts. Recommended guidance_scale between 3.0 and 5.0.

      responses: 
        '200': 
          description: Successful operation
          content: 
            application/json:
              schema: 
                type: object
                properties: 
                  images: 
                    type: object
                    x-type: imageArray
                    title: Images
                    customSocket: image
                    description: Output of the model
                    socketOpts:
                      array: true

  image-to-text:
    post: 
      operationId: image-to-text
      title: Huggingface Image to Text
      requestBody: 
        required: true
        content: 
           application/json:
            schema: 
              type: object
              properties: 

                model: 
                  type: string
                  description: model

                use_cache:
                  type: boolean
                  description: Whether to use the cache or not
                  default: true
                
                wait_for_model:
                  type: boolean
                  description: Whether to wait for the model to be loaded or not
                  default: false         

                image: 
                  type: object
                  x-type: imageArray
                  title: Image
                  description: Input image to the model
                  customSocket: image
      
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  text:
                    type: string
                    title: Text Description
                    x-type: text
                    description: The description of the image
                    customSocket: text
                    socketOpts:
                      array: true

  object-detection:
    post:
      operationId: object-detection
      title: Object Detection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:

                model:
                  type: string
                  description: The model to use for the task
                  required: true

                use_cache:
                  type: boolean
                  description: Whether to use the cache or not
                  default: true
                
                wait_for_model:
                  type: boolean
                  description: Whether to wait for the model to be loaded or not
                  default: false

                image:
                  type: object
                  x-type: imageArray
                  title: Image
                  description: The image to detect objects in
                  customSocket: image
                  socketOpts:
                    array: true
      responses:
          '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:

                  labels:
                    type: string
                    title: Text Description
                    x-type: text
                    description: The label for the class (model specific) of a detected object.
                    customSocket: text
                    socketOpts:
                      array: true

                  json:
                    type: object
                    title: JSON
                    description: A combined JSON output from the model in the form {box, label, score}
                    socketOpts:
                      array: true

  question-answering:
    post:
      operationId: question-answering
      title: Question Answering
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:

                model:
                  type: string
                  description: The model to use for the task
                  required: true

                use_cache:
                  type: boolean
                  description: Whether to use the cache or not
                  default: true
                
                wait_for_model:
                  type: boolean
                  description: Whether to wait for the model to be loaded or not
                  default: false

                context:
                  type: string
                  description: The context to ask the question about
                  required: true
                  
                question:
                  type: string
                  description: The question to ask about the context
                  required: true

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  answer:
                    type: string
                    description: The answer to the question within the context
                    customSocket: text
                    socketOpts:
                      array: true
                  json:
                    type: object
                    title: JSON
                    description: A JSON containing the answer in the format {answer, score, start, end}
                    socketOpts:
                      array: true

  sentence-similarity:
    post:
      operationId: sentence-similarity
      title: Sentence Similarity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                model:
                  type: string
                  description: The model to use for the task
                  required: true

                use_cache:
                  type: boolean
                  description: Whether to use the cache or not
                  default: true
                
                wait_for_model:
                  type: boolean
                  description: Whether to wait for the model to be loaded or not
                  default: false

                sentence1:
                  type: string
                  description: The first sentence to compare
                  required: true

                sentence2:
                  type: string
                  description: The second sentence to compare
                  required: true

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  similarity:
                    type: number
                    description: The similarity between the two sentences
                    customSocket: text
                    socketOpts:
                      array: true

  summarization:
    post:
      operationId: summarization
      title: Summarization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:

                model:
                  type: string
                  description: The model to use for the task
                  required: true

                use_cache:
                  type: boolean
                  description: Whether to use the cache or not
                  default: true
                
                wait_for_model:
                  type: boolean
                  description: Whether to wait for the model to be loaded or not
                  default: false

                inputs:
                  type: string
                  description: A string to be summarized
                  customSocket: text
                  required: true

                min_length:
                  type: number
                  description: Integer to define the minimum length in tokens of the output summary.
                  required: false

                max_length:
                  type: number
                  description: Integer to define the maximum length in tokens of the output summary.
                  required: false

                top_k:
                  type: number
                  description: Integer to define the top tokens considered within the sample operation to create new text.
                  required: false

                top_p:
                  type: number
                  description: Float to define the tokens that are within the sample operation of text generation. Add tokens in the sample for more probable to least probable until the sum of the probabilities is greater than top_p.
                  required: false

                temperature:
                  type: number
                  description: Float (0.0-100.0). The temperature of the sampling operation. 1 means regular sampling, 0 means always take the highest score, 100.0 is getting closer to uniform probability.
                  required: false

                repetition_penalty:
                  type: number
                  description: Float (0.0-100.0). The more a token is used within generation the more it is penalized to not be picked in successive generation passes.
                  required: false

                max_time:
                  type: number
                  description: Float (0-120.0). The amount of time in seconds that the query should take maximum. Network can cause some overhead so it will be a soft limit.
                  required: false

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  summary_text:
                    type: string
                    title: Summary Text
                    x-type: text
                    description: 	The string after summarization
                    customSocket: text

  table-question-answering:
    post:
      operationId: table-question-answering
      title: Table Question Answering
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:

                model:
                  type: string
                  description: The model to use for the task
                  required: true

                use_cache:
                  type: boolean
                  description: Whether to use the cache or not
                  default: true
                
                wait_for_model:
                  type: boolean
                  description: Whether to wait for the model to be loaded or not
                  default: false

                table:
                  type: object
                  description: The table to ask the question about
                  required: true

                query:
                  type: string
                  description: The question to ask about the table
                  required: true
                  
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:

                  answer:
                    type: string
                    description: The answer to the question within the table
                    customSocket: text
                    socketOpts:
                      array: true

                  json:
                    type: object
                    title: JSON
                    description: A JSON containing the answer in the format {answer, aggregator, cells, coordinates}
                    socketOpts:
                      array: true

  tabular-classification:
    post:
      operationId: tabular-classification
      title: Tabular Classification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:

                model:
                  type: string
                  description: The model to use for the task
                  required: true

                use_cache:
                  type: boolean
                  description: Whether to use the cache or not
                  default: true
                
                wait_for_model:
                  type: boolean
                  description: Whether to wait for the model to be loaded or not
                  default: false

                table:
                  type: object
                  description: The table to classify
                  required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  label:
                    type: string
                    description: The label for the class (model specific) of the table.
                    customSocket: text
                    socketOpts:
                      array: true

  tabular-regression:
    post:
      operationId: tabular-regression
      title: Tabular Regression
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:

                model:
                  type: string
                  description: The model to use for the task
                  required: true

                use_cache:
                  type: boolean
                  description: Whether to use the cache or not
                  default: true
                
                wait_for_model:
                  type: boolean
                  description: Whether to wait for the model to be loaded or not
                  default: false

                table:
                  type: object
                  description: The table to classify
                  required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  label:
                    type: number
                    description: The label for the class (model specific) of the table.
                    customSocket: text
                    socketOpts:
                      array: true
  

  text-classification:
    post: 
      operationId: text-classification
      title: Huggingface Text Classification
      requestBody: 
        required: true
        content: 
          application/json: 
            schema: 
              type: object
              properties: 

                model: 
                  type: string
                  description: model

                use_cache:
                  type: boolean
                  description: Whether to use the cache or not
                  default: true
                
                wait_for_model:
                  type: boolean
                  description: Whether to wait for the model to be loaded or not
                  default: false

                inputs: 
                  type: string
                  description: A string or a list of strings to get the classification from      
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  label:
                    type: string
                    description: The label for the class (model specific) of the text.
                    customSocket: text
                    socketOpts:
                      array: true
                  json:
                    type: object
                    title: JSON
                    description: A JSON containing the label in the format {label, score}
                    socketOpts:
                      array: true

  text-generation:
    post:
      operationId: text-generation
      title: Text Generation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:

                model:
                  type: string
                  description: The model to use for the task
                  required: true

                use_cache:
                  type: boolean
                  description: Whether to use the cache or not
                  default: true
                
                wait_for_model:
                  type: boolean
                  description: Whether to wait for the model to be loaded or not
                  default: false

                inputs:
                  type: string
                  description: A string to be summarized
                  customSocket: text
                  required: true

                do_sample:
                  type: boolean
                  description: Whether or not to use sampling; use greedy decoding otherwise.
                  required: false

                max_time:
                  type: number
                  description: Float (0-120.0). The amount of time in seconds that the query should take maximum. Network can cause some overhead so it will be a soft limit.
                  required: false

                num_return_sequences:
                  type: number
                  description: The number of independently computed returned sequences for each element in the batch.
                  required: false

                repetition_penalty:
                  type: number
                  description: Float (0.0-100.0). The more a token is used within generation the more it is penalized to not be picked in successive generation passes.
                  required: false

                temperature:
                  type: number
                  description: Float (0.0-100.0). The temperature of the sampling operation. 1 means regular sampling, 0 means always take the highest score, 100.0 is getting closer to uniform probability.
                  required: false

                top_k:
                  type: number
                  description: Integer to define the top tokens considered within the sample operation to create new text.
                  required: false

                top_p:
                  type: number
                  description: Float to define the tokens that are within the sample operation of text generation. Add tokens in the sample for more probable to least probable until the sum of the probabilities is greater than top_p.
                  required: false

                truncate:
                  type: boolean
                  description: Whether to truncate the input texts to model maximum input length. If set to false, the texts might not be correctly decoded.
                  required: false

                stop_sequences:
                  type: string
                  description: A string or a list of strings to stop the generation on before max_length if it is reached.
                  required: false
                  customSocket: text
                  socketOpts:
                    array: true

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  generated_text:
                    type: string
                    title: Generated Text
                    x-type: text
                    description: The string after generation
                    customSocket: text
                    socketOpts:
                      array: true

  text-to-image:
    post: 
      operationId: text-to-image
      title: Huggingface Text to Image
      requestBody: 
        required: true
        content: 
           application/json:
            schema: 
              type: object
              properties: 

                model: 
                  type: string
                  description: model
                
                use_cache:
                  type: boolean
                  description: Whether to use the cache or not
                  default: true
                
                wait_for_model:
                  type: boolean
                  description: Whether to wait for the model to be loaded or not
                  default: false
                
                prompt: 
                  type: string
                  description: The description of what to draw
                  customSocket: text

                negative_prompt:
                  type: string
                  description: An optional negative prompt for the image generation
                  customSocker: Text

                height:
                  type: number
                  description: The height in pixels of the generated image
                  default: 512

                width:
                  type: number
                  description: The width in pixels of the generated image
                  default: 512
                
                num_inference_steps:
                  type: number
                  description: The number of denoising steps. More steps usually lead to higher quality images but slower inference.
                  default: 20

                guidance_scale:
                  type: number
                  description: Higher guidance scale encourages to generate images closely linked to the text prompt, usually at the expense of lower image quality. 3.5 to 7.5 is typical
    
      responses: 
        '200': 
          description: Successful operation
          content: 
            application/json:
              schema: 
                type: object
                properties: 
                  image: 
                    type: object
                    x-type: imageArray
                    title: Image
                    customSocket: image
                    description: Output of the model

  text-to-speech:
    post: 
      operationId: text-to-speech
      title: Huggingface Text to Speech
      requestBody: 
        required: true
        content: 
          application/json: 
            schema: 
              type: object
              properties: 

                model: 
                  type: string
                  description: model

                use_cache:
                  type: boolean
                  description: Whether to use the cache or not
                  default: true
                
                wait_for_model:
                  type: boolean
                  description: Whether to wait for the model to be loaded or not
                  default: false

                inputs: 
                  type: string
                  description: A string or a list of strings to get the classification from      
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  audio:
                    type: object
                    x-type: audioArray
                    title: Audio
                    description: Output of the model
                    customSocket: audio
                    socketOpts:
                      array: true

  token-classification:
    post: 
      operationId: token-classification
      title: Huggingface Token Classification
      requestBody: 
        required: true
        content: 
          application/json: 
            schema: 
              type: object
              properties: 

                model: 
                  type: string
                  description: model
                              
                inputs: 
                  type: string
                  description: A string or a list of strings to get the classification from    

                use_cache:
                  type: boolean
                  description: Whether to use the cache or not
                  default: true
                
                wait_for_model:
                  type: boolean
                  description: Whether to wait for the model to be loaded or not
                  default: false

                aggregation_strategy:
                  type: string
                  description: The aggregation strategy to use for the token classification. Can be one of ['first', 'average', 'max']
                  default: first
                  choices: [none, simple, first, average, max]
                  required: false
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  entity_group:
                    type: string
                    description: The label for the class (model specific) of the token.
                    customSocket: text
                    socketOpts:
                      array: true
                  json:
                    type: object
                    title: JSON
                    description: A JSON containing the label in the format {entity_group, score, start, end, word}
                    socketOpts:
                      array: true

  translation:
    post: 
      operationId: translation
      title: Huggingface Translation
      requestBody: 
        required: true
        content: 
          application/json: 
            schema: 
              type: object
              properties: 

                model: 
                  type: string
                  description: model

                use_cache:
                  type: boolean
                  description: Whether to use the cache or not
                  default: true
                
                wait_for_model:
                  type: boolean
                  description: Whether to wait for the model to be loaded or not
                  default: false

                inputs: 
                  type: string
                  description: A string or a list of strings to get the classification from
                  customSocket: text      
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  translation:
                    type: string
                    description: The translation of the input text
                    customSocket: text

  visual-question-answering:
    post:
      operationId: visual-question-answering
      title: Visual Question Answering
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:

                model:
                  type: string
                  description: The model to use for the task
                  required: true

                use_cache:
                  type: boolean
                  description: Whether to use the cache or not
                  default: true
                
                wait_for_model:
                  type: boolean
                  description: Whether to wait for the model to be loaded or not
                  default: false

                image:
                  type: object
                  x-type: imageArray
                  title: Image
                  description: The image to ask the question about
                  customSocket: image
                  socketOpts:
                    array: true
                    
                question:
                  type: string
                  description: The question to ask about the image
                  required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  answer:
                    type: string
                    description: The answer to the question about the image
                    customSocket: text
                    socketOpts:
                      array: true
                  json:
                    type: object
                    title: JSON
                    description: A JSON containing the answer in the format {answer, score}
                    socketOpts:
                      array: true

  zero-shot-classification:
    post: 
      operationId: zero-shot-classification
      title: Huggingface Zero Shot Classification
      requestBody: 
        required: true
        content: 
          application/json: 
            schema: 
              type: object
              properties: 

                model: 
                  type: string
                  description: model
                
                inputs: 
                  type: string
                  description: A string or a list of strings to get the classification from

                candidate_labels:
                  type: string
                  description: A string or a list of strings to get the classification from
                  customSocket: text
                  socketOpts:
                    array: true

                multi_label:
                  type: boolean
                  description: Boolean that is set to True if classes can overlap
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  labels:
                    type: string
                    description: The labels for the class (model specific) of the text.
                    customSocket: text
                    socketOpts:
                      array: true
                  json:
                    type: object
                    title: JSON
                    description: A JSON containing the label in the format {labels, scores, sequence}
                    socketOpts:
                      array: true  

  zero-shot-image-classification:
    post: 
      operationId: zero-shot-image-classification
      title: Huggingface Zero Shot Image Classification
      requestBody: 
        required: true
        content: 
          application/json: 
            schema: 
              type: object
              properties: 

                model: 
                  type: string
                  description: model
                
                image: 
                  type: object
                  x-type: imageArray
                  title: Images
                  description: Input images to the model
                  customSocket: image
                  socketOpts:
                    array: true

                candidate_labels:
                  type: string
                  description: A string or a list of strings to get the classification from
                  customSocket: text
                  socketOpts:
                    array: true

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  labels:
                    type: string
                    description: The labels for the class (model specific) of the text.
                    customSocket: text
                    socketOpts:
                      array: true
                  json:
                    type: object
                    title: JSON
                    description: A JSON containing the label in the format {labels, scores, sequence}
                    socketOpts:
                      array: true